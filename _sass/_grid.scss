/*
Grid from https://github.com/cutestrap/cutestrap
Basic grid made using flexbox. By default, the grid is collapsed on small screens.
Markup:
<main class="grid {{modifier_class}}">
  <section class="">
    Cell 1
  </section>
  <article class="grid">
    Cell 2
  </article>
</main>
.grid--medium           - Grid starts at medium sized screens
.grid--large            - Grid starts at large and up screens
Styleguide 1.0
*/

/*
Direct children of `.grid` are columns.
Markup:
<main class="grid">
  <section class="{{modifier_class}}">
    Cell 1
  </section>
  <article class="grid">
    <p class="grid {{modifier_class}}">
      Cell 2.1
    </p>
    <div>
      <p>Cell 2.2</p>
    </div>
  </article>
</main>
.column--light           - Less important column
.column--heavy           - More important column
Styleguide 1.1
*/

// rows
.grid {
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

// columns
.grid > * {
  flex: 1;
  flex-grow: 4;
  padding-left: 1rem;
  padding-right: 1rem;

  &:first-child {
    margin-left: -1rem;
  }

  &:last-child {
    margin-right: -1rem;
  }

  &.column--light {
    flex-grow: 2;
  }

  &.column--heavy {
    flex-grow: 8;
  }
}

@media #{$small-only-grid} {
  .grid--medium {
    display: block;
  }

  .grid--medium > * {
    padding-left: 0;
    padding-right: 0;

    &:first-child {
      margin-left: 0;
    }

    &:last-child {
      margin-right: 0;
    }
  }
}

@media #{$large-only-grid} {
  .grid--large {
    display: block;
  }

  .grid--large > * {
    padding-left: 0;
    padding-right: 0;

    &:first-child {
      margin-left: 0;
    }

    &:last-child {
      margin-right: 0;
    }
  }
}

/*
Wrappers
Use wrappers when you need a content area that is a standardized width and centered on the page.
Markup:
<div class="wrapper {{modifier_class}}">Wrapper</div>
.wrapper-small      - Small Wrapper
.wrapper-large      - Large Wrapper
Styleguide 1.2
*/

.wrapper {
  margin: 0 auto;
  max-width: 960px;
  padding: 4.8rem 2rem;
}

.wrapper--large {
  max-width: 1200px;
  padding: 7.2rem 2rem;
}

.wrapper--small {
  max-width: 640px;
  padding: 2.4rem 2rem;
}


// DELETE !!!
/*

   GRID


*/
.grid-old {
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  margin: 0;
  padding: 0;
}

.grid-cell { flex: 1; }

.grid--gutters {
  margin: -1em 0 1em -1em;

  & > .grid-cell {
    padding: 1em 0 0 1em;
  }
}

/* Base classes for all media */
.grid--fit > .grid-cell { flex: 1; }
.grid--full > .grid-cell { flex: 0 0 100%; }
.grid--1of2 > .grid-cell { flex: 0 0 50% }
.grid--1of3 > .grid-cell { flex: 0 0 33.3333% }
.grid--1of4 > .grid-cell { flex: 0 0 25% }

/* Small to medium screens */
@media #{$breakpoint-not-small} {
  .small-grid--fit > .grid-cell { flex: 1; }
  .small-grid--full > .grid-cell { flex: 0 0 100%; }
  .small-grid--1of2 > .grid-cell { flex: 0 0 50% }
  .small-grid--1of3 > .grid-cell { flex: 0 0 33.3333% }
  .small-grid--1of4 > .grid-cell { flex: 0 0 25% }
}

/* Large screens */
@media #{$breakpoint-large} {
  .large-grid--fit > .grid-cell { flex: 1; }
  .large-grid--full > .grid-cell { flex: 0 0 100%; }
  .large-grid--1of2 > .grid-cell { flex: 0 0 50% }
  .large-grid--1of3 > .grid-cell { flex: 0 0 33.3333% }
  .large-grid--1of4 > .grid-cell { flex: 0 0 25% }
}